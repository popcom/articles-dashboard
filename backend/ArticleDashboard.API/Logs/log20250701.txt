2025-07-01 15:14:41.539 +02:00 [WRN] The property 'Article.BicycleCategories' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-01 15:15:21.047 +02:00 [WRN] The property 'Article.BicycleCategories' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-01 15:19:26.059 +02:00 [INF] Executed DbCommand (313ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
CREATE DATABASE [ArticleDb];
2025-07-01 15:19:26.250 +02:00 [INF] Executed DbCommand (160ms) [Parameters=[], CommandType='"Text"', CommandTimeout='60']
IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [ArticleDb] SET READ_COMMITTED_SNAPSHOT ON;
END;
2025-07-01 15:19:26.276 +02:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 15:19:26.281 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 15:19:26.302 +02:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 15:19:26.365 +02:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 15:19:26.373 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 15:19:26.375 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 15:19:26.386 +02:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 15:19:26.401 +02:00 [INF] Applying migration '20250701131913_InitialCreate'.
2025-07-01 15:19:26.413 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [Articles] (
    [Id] uniqueidentifier NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    [ArticleCategory] nvarchar(max) NOT NULL,
    [BicycleCategories] nvarchar(max) NOT NULL,
    [Material] nvarchar(max) NOT NULL,
    [NetWeight] real NOT NULL,
    CONSTRAINT [PK_Articles] PRIMARY KEY ([Id])
);
2025-07-01 15:19:26.418 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250701131913_InitialCreate', N'9.0.6');
2025-07-01 15:19:26.420 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 15:19:45.128 +02:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 15:19:45.344 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 15:19:45.372 +02:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 15:19:45.536 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 15:19:45.556 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 15:19:45.563 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 15:19:45.575 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 15:19:45.595 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 15:19:45.600 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 15:19:45.944 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 15:19:46.440 +02:00 [INF] Executed DbCommand (76ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single), @p6='?' (DbType = Guid), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5),
(@p6, @p7, @p8, @p9, @p10, @p11);
2025-07-01 15:19:46.933 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 15:19:46.936 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 15:19:47.027 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 15:19:47.030 +02:00 [INF] Hosting environment: Development
2025-07-01 15:19:47.033 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 15:19:48.472 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger - null null
2025-07-01 15:19:48.752 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger - 301 0 null 299.6011ms
2025-07-01 15:19:48.762 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/index.html - null null
2025-07-01 15:19:48.863 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/index.html - 200 null text/html;charset=utf-8 100.3476ms
2025-07-01 15:19:48.875 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/swagger-ui.css - null null
2025-07-01 15:19:48.883 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/index.css - null null
2025-07-01 15:19:48.883 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/swagger-ui-bundle.js - null null
2025-07-01 15:19:48.886 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/index.js - null null
2025-07-01 15:19:48.893 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/swagger-ui-standalone-preset.js - null null
2025-07-01 15:19:48.949 +02:00 [INF] Sending file. Request path: '/index.css'. Physical path: 'N/A'
2025-07-01 15:19:48.950 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/index.js - 200 null application/javascript;charset=utf-8 64.4958ms
2025-07-01 15:19:48.969 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/index.css - 200 202 text/css 86.8861ms
2025-07-01 15:19:48.915 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 15:19:49.007 +02:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-07-01 15:19:49.005 +02:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-07-01 15:19:49.040 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 134.3954ms
2025-07-01 15:19:49.043 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/swagger-ui-standalone-preset.js - 200 229223 text/javascript 153.8907ms
2025-07-01 15:19:49.043 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/swagger-ui.css - 200 154949 text/css 168.0048ms
2025-07-01 15:19:49.067 +02:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-07-01 15:19:49.081 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/swagger-ui-bundle.js - 200 1485241 text/javascript 198.2301ms
2025-07-01 15:19:49.313 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 15:19:49.422 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/favicon-32x32.png - null null
2025-07-01 15:19:49.425 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 111.7269ms
2025-07-01 15:19:49.427 +02:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2025-07-01 15:19:49.436 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/favicon-32x32.png - 200 628 image/png 14.8237ms
2025-07-01 15:19:50.551 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 15:19:50.588 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 37.0548ms
2025-07-01 15:20:14.794 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?articleCategory=1&bicycleCategories=1&bicycleCategories=2&material=1 - null null
2025-07-01 15:20:14.838 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:20:14.883 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 15:20:29.655 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 14761.0922ms
2025-07-01 15:20:29.660 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:20:29.773 +02:00 [ERR] Unhandled exception
StackExchange.Redis.RedisConnectionException: The message timed out in the backlog attempting to send because no connection became available (5000ms) - Last Connection Exception: It was not possible to connect to the redis server(s). ConnectTimeout, command=HMGET, timeout: 5000, inst: 0, qu: 0, qs: 0, aw: False, bw: CheckingForTimeout, rs: NotStarted, ws: Idle, in: 0, last-in: 0, cur-in: 0, sync-ops: 0, async-ops: 1, serverEndpoint: localhost:6379, conn-sec: n/a, aoc: 0, mc: 1/1/0, mgr: 10 of 10 available, clientName: DESKTOP-UPNNFSE(SE.Redis-v2.7.27.49176), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=0,Free=32767,Min=8,Max=32767), POOL: (Threads=9,QueuedItems=0,CompletedItems=471,Timers=8), v: 2.7.27.49176 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)
 ---> StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). ConnectTimeout
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at ArticleDashboard.Application.Features.Articles.Queries.GetAllArticles.GetAllArticlesHandler.Handle(GetAllArticlesQuery query) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.Application\Features\Articles\Queries\GetAllArticles\GetAllArticlesHandler.cs:line 25
   at ArticleDashboard.API.Controllers.ArticlesController.Get(Nullable`1 articleCategory, List`1 bicycleCategories, Nullable`1 material, String sortBy) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API\Controllers\ArticlesController.cs:line 42
   at lambda_method82(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ArticleDashboard.API.Middleware.ExceptionMiddleware.Invoke(HttpContext context) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API\Middleware\ExceptionMiddleware.cs:line 21
2025-07-01 15:20:29.858 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?articleCategory=1&bicycleCategories=1&bicycleCategories=2&material=1 - 500 null application/json 15063.9997ms
2025-07-01 15:21:00.730 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?articleCategory=1&bicycleCategories=1&bicycleCategories=2&material=1 - null null
2025-07-01 15:21:00.760 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:21:00.763 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 15:21:06.579 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 5807.8708ms
2025-07-01 15:21:06.586 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:21:06.657 +02:00 [ERR] Unhandled exception
StackExchange.Redis.RedisConnectionException: The message timed out in the backlog attempting to send because no connection became available (5000ms) - Last Connection Exception: It was not possible to connect to the redis server(s). ConnectTimeout, command=HMGET, timeout: 5000, inst: 0, qu: 0, qs: 0, aw: False, bw: CheckingForTimeout, last-in: 0, cur-in: 0, sync-ops: 0, async-ops: 2, serverEndpoint: localhost:6379, conn-sec: n/a, aoc: 0, mc: 1/1/0, mgr: 10 of 10 available, clientName: DESKTOP-UPNNFSE(SE.Redis-v2.7.27.49176), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=2,Free=32765,Min=8,Max=32767), POOL: (Threads=8,QueuedItems=0,CompletedItems=672,Timers=6), v: 2.7.27.49176 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)
 ---> StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). ConnectTimeout
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at ArticleDashboard.Application.Features.Articles.Queries.GetAllArticles.GetAllArticlesHandler.Handle(GetAllArticlesQuery query) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.Application\Features\Articles\Queries\GetAllArticles\GetAllArticlesHandler.cs:line 25
   at ArticleDashboard.API.Controllers.ArticlesController.Get(Nullable`1 articleCategory, List`1 bicycleCategories, Nullable`1 material, String sortBy) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API\Controllers\ArticlesController.cs:line 42
   at lambda_method82(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ArticleDashboard.API.Middleware.ExceptionMiddleware.Invoke(HttpContext context) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API\Middleware\ExceptionMiddleware.cs:line 21
2025-07-01 15:21:06.679 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?articleCategory=1&bicycleCategories=1&bicycleCategories=2&material=1 - 500 null application/json 5949.9004ms
2025-07-01 15:21:25.635 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/index.html - null null
2025-07-01 15:21:25.649 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/index.html - 200 null text/html;charset=utf-8 14.3802ms
2025-07-01 15:21:25.678 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 15:21:25.687 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 15:21:25.700 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 12.8069ms
2025-07-01 15:21:25.700 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 22.5324ms
2025-07-01 15:21:26.789 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 15:21:26.807 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 18.9963ms
2025-07-01 15:23:02.299 +02:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 15:23:02.425 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 15:23:02.452 +02:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 15:23:02.555 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 15:23:02.568 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 15:23:02.571 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 15:23:02.578 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 15:23:02.588 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 15:23:02.592 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 15:23:02.845 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 15:23:03.272 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 15:23:03.274 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 15:23:03.469 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 15:23:03.484 +02:00 [INF] Hosting environment: Development
2025-07-01 15:23:03.486 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 15:23:04.185 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 15:23:04.224 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 55.3315ms
2025-07-01 15:23:04.583 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 15:23:04.722 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 138.6115ms
2025-07-01 15:23:06.119 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 15:23:06.224 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 104.4649ms
2025-07-01 15:23:45.529 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles - null null
2025-07-01 15:23:45.557 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:23:45.596 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 15:24:09.729 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 24120.8993ms
2025-07-01 15:24:09.735 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:24:09.846 +02:00 [ERR] Unhandled exception
StackExchange.Redis.RedisConnectionException: The message timed out in the backlog attempting to send because no connection became available (5000ms) - Last Connection Exception: It was not possible to connect to the redis server(s). ConnectTimeout, command=HMGET, timeout: 5000, inst: 0, qu: 0, qs: 0, aw: False, bw: CheckingForTimeout, rs: NotStarted, ws: Idle, in: 0, last-in: 0, cur-in: 0, sync-ops: 0, async-ops: 1, serverEndpoint: localhost:6379, conn-sec: n/a, aoc: 0, mc: 1/1/0, mgr: 10 of 10 available, clientName: DESKTOP-UPNNFSE(SE.Redis-v2.7.27.49176), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=0,Free=32767,Min=8,Max=32767), POOL: (Threads=6,QueuedItems=0,CompletedItems=270,Timers=7), v: 2.7.27.49176 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)
 ---> StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). ConnectTimeout
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at ArticleDashboard.Application.Features.Articles.Queries.GetAllArticles.GetAllArticlesHandler.Handle(GetAllArticlesQuery query) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.Application\Features\Articles\Queries\GetAllArticles\GetAllArticlesHandler.cs:line 25
   at ArticleDashboard.API.Controllers.ArticlesController.Get(Nullable`1 articleCategory, List`1 bicycleCategories, Nullable`1 material, String sortBy) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API\Controllers\ArticlesController.cs:line 42
   at lambda_method9(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ArticleDashboard.API.Middleware.ExceptionMiddleware.Invoke(HttpContext context) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API\Middleware\ExceptionMiddleware.cs:line 21
2025-07-01 15:24:09.885 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles - 500 null application/json 24357.3437ms
2025-07-01 15:30:51.444 +02:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 15:30:51.525 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 15:30:51.599 +02:00 [INF] Executed DbCommand (66ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 15:30:51.708 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 15:30:51.722 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 15:30:51.728 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 15:30:51.736 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 15:30:51.750 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 15:30:51.755 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 15:30:52.240 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 15:30:52.717 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 15:30:52.719 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 15:30:53.081 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 15:30:53.090 +02:00 [INF] Hosting environment: Development
2025-07-01 15:30:53.092 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 15:30:53.553 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 15:30:53.653 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 115.3799ms
2025-07-01 15:30:53.954 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 15:30:54.051 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 97.1793ms
2025-07-01 15:30:55.065 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 15:30:55.154 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 89.7223ms
2025-07-01 15:30:59.880 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles - null null
2025-07-01 15:30:59.900 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:30:59.941 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 15:31:07.449 +02:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
2025-07-01 15:31:10.066 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 15:31:10.080 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 10126.747ms
2025-07-01 15:31:10.084 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:31:10.093 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles - 200 null application/json; charset=utf-8 10213.9264ms
2025-07-01 15:31:28.573 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles/7fabc66d-e2d7-4d41-a5ba-e252243b894a - null null
2025-07-01 15:31:28.591 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.GetById (ArticleDashboard.API)'
2025-07-01 15:31:28.601 +02:00 [INF] Route matched with {action = "GetById", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.ArticleDto]] GetById(System.Guid) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 15:31:28.771 +02:00 [INF] Executed DbCommand (35ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
WHERE [a].[Id] = @__id_0
2025-07-01 15:31:28.786 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.ArticleDto'.
2025-07-01 15:31:28.791 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.GetById (ArticleDashboard.API) in 182.7361ms
2025-07-01 15:31:28.796 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.GetById (ArticleDashboard.API)'
2025-07-01 15:31:28.800 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles/7fabc66d-e2d7-4d41-a5ba-e252243b894a - 200 null application/json; charset=utf-8 227.4758ms
2025-07-01 15:46:23.648 +02:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 15:46:23.721 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 15:46:23.742 +02:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 15:46:23.827 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 15:46:23.842 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 15:46:23.847 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 15:46:23.855 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 15:46:23.868 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 15:46:23.872 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 15:46:24.123 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 15:46:24.500 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 15:46:24.503 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 15:46:24.794 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 15:46:24.800 +02:00 [INF] Hosting environment: Development
2025-07-01 15:46:24.803 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 15:46:25.300 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 15:46:25.338 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 57.3711ms
2025-07-01 15:46:25.606 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 15:46:25.710 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 103.5208ms
2025-07-01 15:46:27.002 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 15:46:27.122 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 120.3024ms
2025-07-01 15:47:47.092 +02:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 15:47:47.158 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 15:47:47.176 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 15:47:47.265 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 15:47:47.281 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 15:47:47.285 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 15:47:47.292 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 15:47:47.303 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 15:47:47.307 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 15:47:47.547 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 15:47:47.891 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 15:47:47.894 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 15:47:47.998 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 15:47:48.001 +02:00 [INF] Hosting environment: Development
2025-07-01 15:47:48.002 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 15:47:48.512 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 15:47:48.544 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 44.0061ms
2025-07-01 15:47:48.776 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 15:47:48.876 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 100.2803ms
2025-07-01 15:47:49.873 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 15:47:49.964 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 90.5689ms
2025-07-01 15:48:11.065 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 15:48:11.094 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:48:11.132 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 15:48:11.627 +02:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 15:48:11.664 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 15:48:11.668 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 15:48:11.757 +02:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 15:48:11.879 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 15:48:11.892 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 747.6768ms
2025-07-01 15:48:11.896 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:48:11.902 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 837.0379ms
2025-07-01 15:49:45.562 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 123
2025-07-01 15:49:45.586 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 15:49:45.595 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 15:49:45.868 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 15:49:45.894 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 15:49:45.913 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 312.758ms
2025-07-01 15:49:45.917 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 15:49:45.919 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 357.6988ms
2025-07-01 15:49:49.911 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 15:49:49.919 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:49:49.926 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 15:49:49.969 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 15:49:49.974 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 21.3142ms
2025-07-01 15:49:49.979 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:49:49.981 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 70.0026ms
2025-07-01 15:50:07.116 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 15:50:07.127 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:50:07.136 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 15:50:07.156 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 15:50:07.161 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 8.0241ms
2025-07-01 15:50:07.168 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 15:50:07.172 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 56.2243ms
2025-07-01 16:23:02.074 +02:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 16:23:02.137 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 16:23:02.160 +02:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 16:23:02.228 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 16:23:02.242 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 16:23:02.247 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 16:23:02.258 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 16:23:02.268 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 16:23:02.272 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 16:23:02.521 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 16:23:02.715 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 16:23:02.719 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 16:23:02.810 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 16:23:02.813 +02:00 [INF] Hosting environment: Development
2025-07-01 16:23:02.816 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 16:23:03.796 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 16:23:03.835 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 56.5801ms
2025-07-01 16:23:04.118 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 16:23:04.210 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 92.0663ms
2025-07-01 16:23:05.677 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 16:23:05.819 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 142.8273ms
2025-07-01 16:29:17.534 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:29:17.564 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:29:17.604 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:29:17.710 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 94.7173ms
2025-07-01 16:29:17.716 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:29:17.771 +02:00 [ERR] Unhandled exception
System.InvalidOperationException: Unable to resolve service for type 'StackExchange.Redis.IConnectionMultiplexer' while attempting to activate 'ArticleDashboard.API.Controllers.ArticlesController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)
   at lambda_method13(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ArticleDashboard.API.Middleware.ExceptionMiddleware.Invoke(HttpContext context) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API\Middleware\ExceptionMiddleware.cs:line 21
2025-07-01 16:29:17.812 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 500 null application/json 278.121ms
2025-07-01 16:31:20.855 +02:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 16:31:20.917 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 16:31:20.937 +02:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 16:31:21.007 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 16:31:21.022 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 16:31:21.027 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 16:31:21.035 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 16:31:21.048 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 16:31:21.054 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 16:31:21.291 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 16:31:21.530 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 16:31:21.533 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 16:31:21.690 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 16:31:21.699 +02:00 [INF] Hosting environment: Development
2025-07-01 16:31:21.711 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 16:31:22.009 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 16:31:22.045 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 54.481ms
2025-07-01 16:31:22.428 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 16:31:22.521 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 92.4288ms
2025-07-01 16:31:23.902 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 16:31:24.016 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 114.1782ms
2025-07-01 16:31:28.221 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:31:28.244 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:31:28.283 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:31:28.698 +02:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 16:31:28.725 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 16:31:28.729 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 16:31:28.802 +02:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 16:31:28.930 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:31:28.943 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 648.1675ms
2025-07-01 16:31:28.947 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:31:28.953 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 732.0737ms
2025-07-01 16:32:33.790 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?sortBy=articleCategory&page=1&pageSize=10 - null null
2025-07-01 16:32:33.808 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:32:33.812 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:32:33.910 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 16:32:33.928 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[ArticleCategory]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 16:32:33.945 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:32:33.952 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 127.7581ms
2025-07-01 16:32:33.956 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:32:33.960 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?sortBy=articleCategory&page=1&pageSize=10 - 200 null application/json; charset=utf-8 170.6098ms
2025-07-01 16:33:19.719 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles/9f01a9ba-d631-4ad6-92dd-2747e8b04e1a - null null
2025-07-01 16:33:19.741 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.GetById (ArticleDashboard.API)'
2025-07-01 16:33:19.749 +02:00 [INF] Route matched with {action = "GetById", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.ArticleDto]] GetById(System.Guid) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:33:19.800 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
WHERE [a].[Id] = @__id_0
2025-07-01 16:33:19.818 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2025-07-01 16:33:19.847 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.GetById (ArticleDashboard.API) in 89.6925ms
2025-07-01 16:33:19.853 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.GetById (ArticleDashboard.API)'
2025-07-01 16:33:19.857 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles/9f01a9ba-d631-4ad6-92dd-2747e8b04e1a - 404 null application/problem+json; charset=utf-8 138.9493ms
2025-07-01 16:33:34.731 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles/9f01a9ba-d631-4ad6-92dd-2747e8b04e15 - null null
2025-07-01 16:33:34.746 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.GetById (ArticleDashboard.API)'
2025-07-01 16:33:34.753 +02:00 [INF] Route matched with {action = "GetById", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.ArticleDto]] GetById(System.Guid) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:33:34.767 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
WHERE [a].[Id] = @__id_0
2025-07-01 16:33:34.780 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.ArticleDto'.
2025-07-01 16:33:34.785 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.GetById (ArticleDashboard.API) in 27.2559ms
2025-07-01 16:33:34.804 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.GetById (ArticleDashboard.API)'
2025-07-01 16:33:34.807 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles/9f01a9ba-d631-4ad6-92dd-2747e8b04e15 - 200 null application/json; charset=utf-8 76.7381ms
2025-07-01 16:34:29.317 +02:00 [INF] Request starting HTTP/2 PUT https://localhost:7023/api/Articles/9f01a9ba-d631-4ad6-92dd-2747e8b04e15 - application/json 122
2025-07-01 16:34:29.327 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Put (ArticleDashboard.API)'
2025-07-01 16:34:29.335 +02:00 [INF] Route matched with {action = "Put", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Put(System.Guid, ArticleDashboard.Application.Features.Articles.Commands.UpdateArticle.UpdateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:34:29.385 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
WHERE [a].[Id] = @__id_0
2025-07-01 16:34:29.543 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Put (ArticleDashboard.API) in 201.6457ms
2025-07-01 16:34:29.549 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Put (ArticleDashboard.API)'
2025-07-01 16:34:29.675 +02:00 [ERR] Unhandled exception
AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.

Mapping types:
UpdateArticleCommand -> Article
ArticleDashboard.Application.Features.Articles.Commands.UpdateArticle.UpdateArticleCommand -> ArticleDashboard.Domain.Entities.Article
   at lambda_method120(Closure, UpdateArticleCommand, Article, ResolutionContext)
   at ArticleDashboard.Application.Features.Articles.Commands.UpdateArticleHandler.Handle(ValueTuple`2 input) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.Application\Features\Articles\Commands\UpdateArticle\UpdateArticleHandler.cs:line 26
   at ArticleDashboard.API.Controllers.ArticlesController.Put(Guid id, UpdateArticleCommand command) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API\Controllers\ArticlesController.cs:line 83
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ArticleDashboard.API.Middleware.ExceptionMiddleware.Invoke(HttpContext context) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API\Middleware\ExceptionMiddleware.cs:line 21
2025-07-01 16:34:29.752 +02:00 [INF] Request finished HTTP/2 PUT https://localhost:7023/api/Articles/9f01a9ba-d631-4ad6-92dd-2747e8b04e15 - 500 null application/json 436.6391ms
2025-07-01 16:35:35.454 +02:00 [INF] Request starting HTTP/2 PUT https://localhost:7023/api/Articles/9f01a9ba-d631-4ad6-92dd-2747e8b04e15 - application/json 120
2025-07-01 16:35:35.475 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Put (ArticleDashboard.API)'
2025-07-01 16:35:35.480 +02:00 [INF] Route matched with {action = "Put", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Put(System.Guid, ArticleDashboard.Application.Features.Articles.Commands.UpdateArticle.UpdateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:35:35.493 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
WHERE [a].[Id] = @__id_0
2025-07-01 16:35:35.589 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Put (ArticleDashboard.API) in 102.8179ms
2025-07-01 16:35:35.597 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Put (ArticleDashboard.API)'
2025-07-01 16:35:35.699 +02:00 [ERR] Unhandled exception
AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.

Mapping types:
UpdateArticleCommand -> Article
ArticleDashboard.Application.Features.Articles.Commands.UpdateArticle.UpdateArticleCommand -> ArticleDashboard.Domain.Entities.Article
   at lambda_method120(Closure, UpdateArticleCommand, Article, ResolutionContext)
   at ArticleDashboard.Application.Features.Articles.Commands.UpdateArticleHandler.Handle(ValueTuple`2 input) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.Application\Features\Articles\Commands\UpdateArticle\UpdateArticleHandler.cs:line 26
   at ArticleDashboard.API.Controllers.ArticlesController.Put(Guid id, UpdateArticleCommand command) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API\Controllers\ArticlesController.cs:line 83
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ArticleDashboard.API.Middleware.ExceptionMiddleware.Invoke(HttpContext context) in H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API\Middleware\ExceptionMiddleware.cs:line 21
2025-07-01 16:35:35.748 +02:00 [INF] Request finished HTTP/2 PUT https://localhost:7023/api/Articles/9f01a9ba-d631-4ad6-92dd-2747e8b04e15 - 500 null application/json 295.0049ms
2025-07-01 16:36:13.010 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 121
2025-07-01 16:36:13.026 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:36:13.049 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:36:13.207 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 16:36:13.271 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 16:36:13.300 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 220.2313ms
2025-07-01 16:36:13.304 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:36:13.307 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 298.1033ms
2025-07-01 16:36:24.428 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:36:24.434 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:36:24.443 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:36:24.493 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:36:24.502 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 17.8784ms
2025-07-01 16:36:24.508 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:36:24.511 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 83.4544ms
2025-07-01 16:36:35.494 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:36:35.505 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:36:35.515 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:36:35.555 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:36:35.567 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 17.2132ms
2025-07-01 16:36:35.579 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:36:35.583 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 89.5054ms
2025-07-01 16:38:04.015 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:38:04.033 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:38:04.036 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:38:19.150 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:38:19.156 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 15110.856ms
2025-07-01 16:38:19.162 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:38:19.166 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 15150.5585ms
2025-07-01 16:38:48.654 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 124
2025-07-01 16:38:48.666 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:38:48.679 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:38:48.723 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 16:39:58.034 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 16:39:58.043 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 69329.3076ms
2025-07-01 16:39:58.047 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:39:58.049 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 69394.842ms
2025-07-01 16:40:06.921 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:40:07.014 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:40:07.021 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:40:08.939 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:40:08.944 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 1911.9994ms
2025-07-01 16:40:08.948 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:40:08.950 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 2029.2596ms
2025-07-01 16:42:13.251 +02:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 16:42:13.317 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 16:42:13.336 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 16:42:13.414 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 16:42:13.429 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 16:42:13.434 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 16:42:13.440 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 16:42:13.450 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 16:42:13.456 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 16:42:13.674 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 16:42:13.886 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 16:42:13.890 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 16:42:13.991 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 16:42:13.994 +02:00 [INF] Hosting environment: Development
2025-07-01 16:42:13.997 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 16:42:14.654 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 16:42:14.683 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 42.2881ms
2025-07-01 16:42:14.932 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 16:42:15.030 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 97.8866ms
2025-07-01 16:42:16.231 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 16:42:16.346 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 115.4225ms
2025-07-01 16:42:35.073 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 122
2025-07-01 16:42:35.100 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:42:35.145 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:42:35.669 +02:00 [INF] Executed DbCommand (25ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 16:43:00.759 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 16:43:00.781 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 25627.0172ms
2025-07-01 16:43:00.788 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:43:00.795 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 25721.6765ms
2025-07-01 16:43:10.245 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:43:10.255 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:43:10.268 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:43:15.741 +02:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 16:43:15.766 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 16:43:15.771 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 16:43:15.810 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 16:43:15.851 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:43:15.858 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 5582.7363ms
2025-07-01 16:43:15.864 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:43:15.867 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 5621.4128ms
2025-07-01 16:43:30.378 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 122
2025-07-01 16:43:30.389 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:43:30.400 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:43:30.425 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 16:43:37.589 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 16:43:37.594 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 7185.5592ms
2025-07-01 16:43:37.599 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:43:37.603 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 7225.4832ms
2025-07-01 16:43:42.414 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:43:42.424 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:43:42.432 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:43:46.425 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:43:46.431 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 3982.3827ms
2025-07-01 16:43:46.435 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:43:46.437 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 4023.2668ms
2025-07-01 16:46:24.679 +02:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 16:46:24.750 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 16:46:24.779 +02:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 16:46:24.879 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 16:46:24.896 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 16:46:24.902 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 16:46:24.911 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 16:46:24.948 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 16:46:24.962 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 16:46:25.345 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 16:46:25.693 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 16:46:25.696 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 16:46:25.804 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 16:46:25.808 +02:00 [INF] Hosting environment: Development
2025-07-01 16:46:25.810 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 16:46:26.670 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 16:46:26.701 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 47.1156ms
2025-07-01 16:46:26.924 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 16:46:26.989 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 65.6301ms
2025-07-01 16:46:28.107 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 16:46:28.213 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 106.7885ms
2025-07-01 16:46:33.404 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:46:33.424 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:46:33.464 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:46:41.321 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:46:41.341 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 7863.2972ms
2025-07-01 16:46:41.345 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:46:41.349 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 7945.2201ms
2025-07-01 16:46:58.512 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 122
2025-07-01 16:46:58.531 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:46:58.545 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:46:58.930 +02:00 [INF] Executed DbCommand (31ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 16:47:19.721 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 16:47:19.741 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 21190.8323ms
2025-07-01 16:47:19.744 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:47:19.749 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 21236.4961ms
2025-07-01 16:47:25.427 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:47:25.433 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:47:25.480 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:47:27.155 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:47:27.162 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 1673.8796ms
2025-07-01 16:47:27.167 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:47:27.172 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 1745.2281ms
2025-07-01 16:48:29.686 +02:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 16:48:29.738 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 16:48:29.755 +02:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 16:48:29.825 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 16:48:29.837 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 16:48:29.841 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 16:48:29.848 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 16:48:29.858 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 16:48:29.861 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 16:48:30.105 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 16:48:30.319 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 16:48:30.322 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 16:48:30.430 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 16:48:30.433 +02:00 [INF] Hosting environment: Development
2025-07-01 16:48:30.451 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 16:48:30.791 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 16:48:30.820 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 42.0579ms
2025-07-01 16:48:31.136 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 16:48:31.208 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 72.1531ms
2025-07-01 16:48:32.387 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 16:48:32.536 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 148.7101ms
2025-07-01 16:48:38.671 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:48:38.694 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:48:38.735 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:48:42.881 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:48:42.905 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 4155.3369ms
2025-07-01 16:48:42.911 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:48:42.915 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 4243.7841ms
2025-07-01 16:49:04.137 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 123
2025-07-01 16:49:04.147 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:49:04.165 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:49:04.508 +02:00 [INF] Executed DbCommand (33ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 16:49:04.553 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 16:49:04.575 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 402.505ms
2025-07-01 16:49:04.579 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:49:04.587 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 449.4387ms
2025-07-01 16:49:16.229 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:49:16.236 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:49:16.240 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:49:24.192 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:49:24.200 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 7928.552ms
2025-07-01 16:49:24.207 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:49:24.208 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 7979.5288ms
2025-07-01 16:52:13.546 +02:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 16:52:13.601 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 16:52:13.623 +02:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 16:52:13.714 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 16:52:13.730 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 16:52:13.739 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 16:52:13.748 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 16:52:13.761 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 16:52:13.763 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 16:52:14.096 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 16:52:14.409 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 16:52:14.412 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 16:52:14.609 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 16:52:14.613 +02:00 [INF] Hosting environment: Development
2025-07-01 16:52:14.634 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 16:52:15.108 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 16:52:15.155 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 59.562ms
2025-07-01 16:52:15.514 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 16:52:15.614 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 100.1662ms
2025-07-01 16:52:17.026 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 16:52:17.134 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 108.5224ms
2025-07-01 16:52:21.533 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 16:52:21.556 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:52:21.596 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:52:24.782 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 16:52:24.801 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 3190.742ms
2025-07-01 16:52:24.805 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 16:52:24.809 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 3275.7278ms
2025-07-01 16:53:10.919 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 124
2025-07-01 16:53:10.937 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:53:10.947 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 16:53:11.265 +02:00 [INF] Executed DbCommand (34ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 16:53:25.333 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 16:53:25.351 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 14390.1086ms
2025-07-01 16:53:25.355 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 16:53:25.362 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 14443.3571ms
2025-07-01 17:03:06.150 +02:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 17:03:06.207 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 17:03:06.225 +02:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 17:03:06.305 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 17:03:06.319 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 17:03:06.323 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 17:03:06.330 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 17:03:06.340 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 17:03:06.346 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 17:03:06.561 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 17:03:06.766 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 17:03:06.781 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 17:03:07.484 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 17:03:07.494 +02:00 [INF] Hosting environment: Development
2025-07-01 17:03:07.521 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 17:03:07.717 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 17:03:07.746 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 43.2191ms
2025-07-01 17:03:08.295 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 17:03:08.423 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 133.923ms
2025-07-01 17:03:09.783 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 17:03:09.902 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 119.5504ms
2025-07-01 17:03:14.445 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 17:03:14.466 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:03:14.503 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:03:14.945 +02:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 17:03:14.970 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 17:03:14.974 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 17:03:15.049 +02:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 17:03:15.173 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 17:03:15.185 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 671.7052ms
2025-07-01 17:03:15.189 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:03:15.197 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 752.4782ms
2025-07-01 17:03:37.417 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 123
2025-07-01 17:03:37.428 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 17:03:37.454 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:03:37.694 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 17:03:48.979 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 17:03:48.999 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 11531.751ms
2025-07-01 17:03:49.004 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 17:03:49.006 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 11589.4815ms
2025-07-01 17:03:56.397 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 17:03:56.408 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:03:56.417 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:03:56.453 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 17:03:56.458 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 20.6441ms
2025-07-01 17:03:56.462 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:03:56.464 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 67.1779ms
2025-07-01 17:07:29.221 +02:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 17:07:29.289 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 17:07:29.311 +02:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 17:07:29.403 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 17:07:29.416 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 17:07:29.422 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 17:07:29.431 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 17:07:29.442 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 17:07:29.448 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 17:07:29.752 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 17:07:30.035 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 17:07:30.038 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 17:07:30.196 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 17:07:30.202 +02:00 [INF] Hosting environment: Development
2025-07-01 17:07:30.215 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 17:07:30.678 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 17:07:30.718 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 54.974ms
2025-07-01 17:07:31.101 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 17:07:31.279 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 171.3102ms
2025-07-01 17:07:33.022 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 17:07:33.177 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 154.8083ms
2025-07-01 17:08:16.722 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 137
2025-07-01 17:08:16.751 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 17:08:16.788 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:08:17.341 +02:00 [INF] Executed DbCommand (30ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 17:08:30.097 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 17:08:30.116 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 13318.8262ms
2025-07-01 17:08:30.120 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 17:08:30.127 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 13405.227ms
2025-07-01 17:08:38.403 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 17:08:38.413 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:08:38.426 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:08:38.520 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 17:08:38.539 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 103.1899ms
2025-07-01 17:08:38.543 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:08:38.546 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 142.5035ms
2025-07-01 17:08:48.029 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=100 - null null
2025-07-01 17:08:48.043 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:08:48.053 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:08:48.283 +02:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 17:08:48.327 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 17:08:48.329 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 17:08:48.385 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 17:08:48.417 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 17:08:48.421 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 357.3547ms
2025-07-01 17:08:48.424 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:08:48.427 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=100 - 200 null application/json; charset=utf-8 398.1815ms
2025-07-01 17:09:02.608 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 131
2025-07-01 17:09:02.621 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 17:09:02.632 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:09:02.659 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 17:09:16.512 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 17:09:16.519 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 13875.7143ms
2025-07-01 17:09:16.523 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 17:09:16.525 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 13917.0625ms
2025-07-01 17:09:23.554 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=100 - null null
2025-07-01 17:09:23.559 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:09:23.563 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:09:23.608 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 17:09:23.611 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 11.3565ms
2025-07-01 17:09:23.615 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:09:23.618 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=100 - 200 null application/json; charset=utf-8 64.1936ms
2025-07-01 17:12:07.587 +02:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 17:12:07.642 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 17:12:07.660 +02:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 17:12:07.733 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 17:12:07.747 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 17:12:07.751 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 17:12:07.757 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 17:12:07.768 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 17:12:07.772 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 17:12:07.999 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 17:12:08.189 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 17:12:08.192 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 17:12:08.288 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 17:12:08.291 +02:00 [INF] Hosting environment: Development
2025-07-01 17:12:08.294 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 17:12:09.143 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 17:12:09.180 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 53.3016ms
2025-07-01 17:12:09.455 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 17:12:09.518 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 63.5561ms
2025-07-01 17:12:10.557 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 17:12:10.663 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 105.7451ms
2025-07-01 17:12:20.645 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=50 - null null
2025-07-01 17:12:20.665 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:12:20.704 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:12:21.147 +02:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 17:12:21.177 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 17:12:21.181 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 17:12:21.252 +02:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 17:12:21.368 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 17:12:21.379 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 665.3991ms
2025-07-01 17:12:21.387 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:12:21.393 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=50 - 200 null application/json; charset=utf-8 748.3263ms
2025-07-01 17:12:41.739 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 162
2025-07-01 17:12:41.767 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 17:12:41.778 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:12:42.044 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 17:12:59.250 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 17:12:59.272 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 17484.853ms
2025-07-01 17:12:59.275 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 17:12:59.277 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 17538.1438ms
2025-07-01 17:13:07.125 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=50 - null null
2025-07-01 17:13:07.134 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:13:07.139 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:13:07.196 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 17:13:07.206 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 27.0364ms
2025-07-01 17:13:07.220 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:13:07.229 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=50 - 200 null application/json; charset=utf-8 104.2902ms
2025-07-01 17:18:10.461 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 17:18:10.516 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 17:18:10.534 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 17:18:10.611 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 17:18:10.626 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 17:18:10.631 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 17:18:10.638 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 17:18:10.650 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 17:18:10.655 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 17:18:10.896 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 17:18:11.096 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 17:18:11.099 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 17:18:11.195 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 17:18:11.198 +02:00 [INF] Hosting environment: Development
2025-07-01 17:18:11.200 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 17:18:11.976 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 17:18:12.009 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 46.8989ms
2025-07-01 17:18:12.254 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 17:18:12.332 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 78.234ms
2025-07-01 17:18:13.356 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 17:18:13.457 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 102.0065ms
2025-07-01 17:18:27.459 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=20 - null null
2025-07-01 17:18:27.481 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:18:27.523 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:18:27.945 +02:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 17:18:27.972 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 17:18:27.976 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 17:18:28.057 +02:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 17:18:28.178 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 17:18:28.196 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 654.7016ms
2025-07-01 17:18:28.201 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:18:28.207 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=20 - 200 null application/json; charset=utf-8 748.0091ms
2025-07-01 17:18:47.744 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 122
2025-07-01 17:18:47.755 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 17:18:47.768 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:18:47.998 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 17:18:54.072 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 17:18:54.095 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 6315.544ms
2025-07-01 17:18:54.100 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 17:18:54.103 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 6359.524ms
2025-07-01 17:19:01.988 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=20 - null null
2025-07-01 17:19:01.997 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:19:02.006 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:19:02.044 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 17:19:02.049 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 27.7345ms
2025-07-01 17:19:02.052 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:19:02.055 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=20 - 200 null application/json; charset=utf-8 68.0292ms
2025-07-01 17:19:11.987 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=20 - null null
2025-07-01 17:19:12.005 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:19:12.023 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:19:12.045 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 17:19:12.049 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 8.3345ms
2025-07-01 17:19:12.052 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:19:12.054 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=20 - 200 null application/json; charset=utf-8 67.4456ms
2025-07-01 17:23:24.073 +02:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 17:23:24.135 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 17:23:24.157 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 17:23:24.243 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 17:23:24.257 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 17:23:24.263 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 17:23:24.270 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 17:23:24.283 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 17:23:24.287 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 17:23:24.562 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 17:23:24.810 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 17:23:24.813 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 17:23:24.942 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 17:23:24.945 +02:00 [INF] Hosting environment: Development
2025-07-01 17:23:24.947 +02:00 [INF] Content root path: H:\newdev\workspace\visualstudio2022\ArticleDashboard\ArticleDashboard.API
2025-07-01 17:23:25.771 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 17:23:25.817 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 65.2117ms
2025-07-01 17:23:26.159 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 17:23:26.296 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 136.4426ms
2025-07-01 17:23:27.645 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 17:23:27.755 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 109.1528ms
2025-07-01 17:23:55.695 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=30 - null null
2025-07-01 17:23:55.725 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:23:55.764 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:23:56.204 +02:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 17:23:56.232 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 17:23:56.236 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 17:23:56.336 +02:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 17:23:56.466 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 17:23:56.480 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 704.7425ms
2025-07-01 17:23:56.487 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:23:56.496 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=30 - 200 null application/json; charset=utf-8 801.2217ms
2025-07-01 17:24:12.348 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7023/api/Articles - application/json 146
2025-07-01 17:24:12.358 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 17:24:12.383 +02:00 [INF] Route matched with {action = "Post", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Post(ArticleDashboard.Application.Features.Articles.Commands.CreateArticle.CreateArticleCommand) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:24:12.630 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
2025-07-01 17:24:18.405 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'null'.
2025-07-01 17:24:18.423 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API) in 6027.2761ms
2025-07-01 17:24:18.430 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Post (ArticleDashboard.API)'
2025-07-01 17:24:18.434 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7023/api/Articles - 201 0 null 6085.738ms
2025-07-01 17:24:32.119 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=30 - null null
2025-07-01 17:24:32.131 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:24:32.141 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 17:24:32.181 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 17:24:32.186 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 29.1804ms
2025-07-01 17:24:32.191 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 17:24:32.194 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=30 - 200 null application/json; charset=utf-8 75.1431ms
2025-07-01 18:18:08.476 +02:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 18:18:08.555 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 18:18:08.576 +02:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 18:18:08.696 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 18:18:08.709 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 18:18:08.713 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 18:18:08.729 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 18:18:08.741 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 18:18:08.746 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 18:18:09.065 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 18:18:09.331 +02:00 [INF] Executed DbCommand (16ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Single), @p6='?' (DbType = Guid), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Single)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [BicycleCategories], [Material], [Name], [NetWeight])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5),
(@p6, @p7, @p8, @p9, @p10, @p11);
2025-07-01 18:18:09.589 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 18:18:09.592 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 18:18:09.692 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 18:18:09.694 +02:00 [INF] Hosting environment: Development
2025-07-01 18:18:09.697 +02:00 [INF] Content root path: H:\newdev\workspace\Noca\backend\ArticleDashboard.API
2025-07-01 18:18:10.904 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 18:18:10.968 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 80.4396ms
2025-07-01 18:18:11.335 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 18:18:11.631 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 296.1276ms
2025-07-01 18:18:13.279 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 18:18:13.404 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 125.0259ms
2025-07-01 18:18:53.879 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - null null
2025-07-01 18:18:53.909 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 18:18:53.965 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 18:18:54.246 +02:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 18:18:54.288 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 18:18:54.291 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 18:18:54.353 +02:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY (SELECT 1)
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 18:18:54.413 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 18:18:54.472 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 495.3409ms
2025-07-01 18:18:54.475 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 18:18:54.482 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?page=1&pageSize=10 - 200 null application/json; charset=utf-8 607.4105ms
2025-07-01 20:46:18.159 +02:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 20:46:18.245 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 20:46:18.273 +02:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 20:46:18.378 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 20:46:18.393 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 20:46:18.397 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 20:46:18.436 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 20:46:18.450 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 20:46:18.454 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 20:46:18.752 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 20:46:19.037 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 20:46:19.040 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 20:46:19.179 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 20:46:19.181 +02:00 [INF] Hosting environment: Development
2025-07-01 20:46:19.185 +02:00 [INF] Content root path: H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API
2025-07-01 20:46:20.115 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 20:46:20.158 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 58.8844ms
2025-07-01 20:46:20.412 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 20:46:20.545 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 133.2828ms
2025-07-01 20:46:23.321 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 20:46:23.707 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 387.2345ms
2025-07-01 20:50:33.255 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 20:50:33.281 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 20:50:33.338 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 20:50:37.252 +02:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 20:50:37.415 +02:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[NetWeight]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 20:50:37.531 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 20:50:37.570 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 4203.2384ms
2025-07-01 20:50:37.574 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 20:50:37.582 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 4326.7916ms
2025-07-01 20:52:39.024 +02:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 20:52:39.109 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 20:52:39.143 +02:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 20:52:39.264 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 20:52:39.282 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 20:52:39.289 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 20:52:39.299 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 20:52:39.340 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 20:52:39.346 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 20:52:39.771 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Articles] AS [a]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-07-01 20:52:40.050 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 20:52:40.052 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 20:52:40.178 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 20:52:40.181 +02:00 [INF] Hosting environment: Development
2025-07-01 20:52:40.185 +02:00 [INF] Content root path: H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API
2025-07-01 20:52:40.841 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 20:52:40.876 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 50.9354ms
2025-07-01 20:52:41.286 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 20:52:41.381 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 94.7846ms
2025-07-01 20:52:42.954 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 20:52:43.052 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 98.7243ms
2025-07-01 20:52:52.052 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 20:52:52.072 +02:00 [INF] CORS policy execution successful.
2025-07-01 20:52:52.083 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 20:52:52.172 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 20:52:55.699 +02:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 20:52:55.825 +02:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[NetWeight]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 20:52:55.964 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 20:52:56.011 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 3827.3496ms
2025-07-01 20:52:56.016 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 20:52:56.023 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 3971.0129ms
2025-07-01 20:58:14.079 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 20:58:14.097 +02:00 [INF] CORS policy execution successful.
2025-07-01 20:58:14.100 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 20:58:14.105 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 20:58:16.075 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 20:58:16.087 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[NetWeight]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 20:58:16.101 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 20:58:16.106 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 1979.056ms
2025-07-01 20:58:16.113 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 20:58:16.117 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 2038.4432ms
2025-07-01 21:05:03.724 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:05:03.768 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:05:03.770 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:05:03.775 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:05:05.754 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 21:05:05.765 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[NetWeight]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 21:05:05.776 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 21:05:05.787 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 2004.8755ms
2025-07-01 21:05:05.791 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:05:05.797 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 2073.1122ms
2025-07-01 21:08:47.617 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:08:47.627 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:08:47.632 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:08:47.635 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:08:50.312 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 21:08:50.322 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[NetWeight]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 21:08:50.333 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 21:08:50.345 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 2703.0603ms
2025-07-01 21:08:50.350 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:08:50.353 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 2735.8623ms
2025-07-01 21:10:01.048 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=Carbon&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:10:01.067 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:10:01.070 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:10:01.073 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:10:05.360 +02:00 [INF] Executed DbCommand (9ms) [Parameters=[@__mat_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
WHERE [a].[Material] = @__mat_0
2025-07-01 21:10:05.380 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__mat_0='?' (Size = 4000), @__p_1='?' (DbType = Int32), @__p_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
WHERE [a].[Material] = @__mat_0
ORDER BY [a].[NetWeight]
OFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY
2025-07-01 21:10:05.391 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 21:10:05.394 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 4304.5503ms
2025-07-01 21:10:05.401 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:10:05.406 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=Carbon&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 4357.8453ms
2025-07-01 21:10:09.387 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:10:09.400 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:10:09.403 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:10:09.411 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:10:11.851 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 21:10:11.864 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[NetWeight]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 21:10:11.878 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 21:10:11.884 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 2463.4386ms
2025-07-01 21:10:11.892 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:10:11.895 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 2508.1363ms
2025-07-01 21:10:15.233 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:10:15.243 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:10:15.246 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:10:15.252 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:10:15.427 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 161.689ms
2025-07-01 21:10:15.431 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:10:15.458 +02:00 [ERR] Unhandled exception
System.InvalidOperationException: The LINQ expression 'b => __bikes_0
    .Contains(b)' could not be translated. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.VisitLambda[T](Expression`1 lambdaExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerSqlTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.TranslateInternal(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.Translate(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateExpression(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateLambdaExpression(ShapedQueryExpression shapedQueryExpression, LambdaExpression lambdaExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateWhere(ShapedQueryExpression source, LambdaExpression predicate)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.Translate(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutorExpression[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass11_0`1.<ExecuteCore>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteCore[TResult](Expression query, Boolean async, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteAsync[TResult](Expression query, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.ExecuteAsync[TResult](Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at ArticleDashboard.Application.Features.Articles.Queries.GetAllArticlesHandler.Handle(GetAllArticlesQuery query) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.Application\Features\Articles\Queries\GetAllArticles\GetAllArticlesHandler.cs:line 31
   at ArticleDashboard.API.Controllers.ArticlesController.Get(Nullable`1 articleCategory, List`1 bicycleCategories, Nullable`1 material, String sortBy, Int32 page, Int32 pageSize) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API\Controllers\ArticlesController.cs:line 51
   at lambda_method10(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ArticleDashboard.API.Middleware.ExceptionMiddleware.Invoke(HttpContext context) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API\Middleware\ExceptionMiddleware.cs:line 21
2025-07-01 21:10:15.564 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - 500 null application/json 331.9169ms
2025-07-01 21:10:17.891 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:10:17.897 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:10:17.899 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:10:17.906 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:10:17.919 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 21:10:17.927 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[NetWeight]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 21:10:17.937 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 21:10:17.941 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 27.6536ms
2025-07-01 21:10:17.944 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:10:17.946 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 56.1133ms
2025-07-01 21:10:20.804 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:10:20.815 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:10:20.819 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:10:20.822 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:10:20.959 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 121.6093ms
2025-07-01 21:10:20.964 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:10:21.000 +02:00 [ERR] Unhandled exception
System.InvalidOperationException: The LINQ expression 'b => __bikes_0
    .Contains(b)' could not be translated. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.VisitLambda[T](Expression`1 lambdaExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerSqlTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.TranslateInternal(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.Translate(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateExpression(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateLambdaExpression(ShapedQueryExpression shapedQueryExpression, LambdaExpression lambdaExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateWhere(ShapedQueryExpression source, LambdaExpression predicate)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.Translate(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutorExpression[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass11_0`1.<ExecuteCore>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteCore[TResult](Expression query, Boolean async, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteAsync[TResult](Expression query, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.ExecuteAsync[TResult](Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at ArticleDashboard.Application.Features.Articles.Queries.GetAllArticlesHandler.Handle(GetAllArticlesQuery query) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.Application\Features\Articles\Queries\GetAllArticles\GetAllArticlesHandler.cs:line 31
   at ArticleDashboard.API.Controllers.ArticlesController.Get(Nullable`1 articleCategory, List`1 bicycleCategories, Nullable`1 material, String sortBy, Int32 page, Int32 pageSize) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API\Controllers\ArticlesController.cs:line 51
   at lambda_method10(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ArticleDashboard.API.Middleware.ExceptionMiddleware.Invoke(HttpContext context) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API\Middleware\ExceptionMiddleware.cs:line 21
2025-07-01 21:10:21.133 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - 500 null application/json 329.2365ms
2025-07-01 21:10:51.974 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:10:52.028 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:10:52.202 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:10:52.231 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:10:52.253 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 21:10:52.265 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[NetWeight]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 21:10:52.280 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 21:10:52.285 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 36.9922ms
2025-07-01 21:10:52.293 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:10:52.296 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 321.8958ms
2025-07-01 21:11:13.926 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:11:13.950 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:11:13.952 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:11:13.955 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:11:14.138 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 170.3002ms
2025-07-01 21:11:14.148 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:11:14.197 +02:00 [ERR] Unhandled exception
System.InvalidOperationException: The LINQ expression 'b => __bikes_0
    .Contains(b)' could not be translated. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.VisitLambda[T](Expression`1 lambdaExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerSqlTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.TranslateInternal(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.Translate(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateExpression(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateLambdaExpression(ShapedQueryExpression shapedQueryExpression, LambdaExpression lambdaExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateWhere(ShapedQueryExpression source, LambdaExpression predicate)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.Translate(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutorExpression[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass11_0`1.<ExecuteCore>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteCore[TResult](Expression query, Boolean async, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteAsync[TResult](Expression query, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.ExecuteAsync[TResult](Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at ArticleDashboard.Application.Features.Articles.Queries.GetAllArticlesHandler.Handle(GetAllArticlesQuery query) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.Application\Features\Articles\Queries\GetAllArticles\GetAllArticlesHandler.cs:line 31
   at ArticleDashboard.API.Controllers.ArticlesController.Get(Nullable`1 articleCategory, List`1 bicycleCategories, Nullable`1 material, String sortBy, Int32 page, Int32 pageSize) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API\Controllers\ArticlesController.cs:line 51
   at lambda_method10(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ArticleDashboard.API.Middleware.ExceptionMiddleware.Invoke(HttpContext context) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API\Middleware\ExceptionMiddleware.cs:line 21
2025-07-01 21:11:14.336 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - 500 null application/json 409.8546ms
2025-07-01 21:11:30.929 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:11:30.961 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:11:30.980 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:11:31.006 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:11:50.654 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:11:50.662 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 21:11:50.673 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:11:50.688 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:11:50.688 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[NetWeight]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 21:11:50.690 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:11:50.700 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 21:11:58.412 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 27353.3262ms
2025-07-01 21:11:58.412 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 7706.0061ms
2025-07-01 21:11:58.417 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:11:58.420 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:11:58.424 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 27495.7364ms
2025-07-01 21:11:58.452 +02:00 [ERR] Unhandled exception
System.InvalidOperationException: The LINQ expression 'b => __bikes_0
    .Contains(b)' could not be translated. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.VisitLambda[T](Expression`1 lambdaExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerSqlTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.TranslateInternal(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.Translate(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateExpression(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateLambdaExpression(ShapedQueryExpression shapedQueryExpression, LambdaExpression lambdaExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateWhere(ShapedQueryExpression source, LambdaExpression predicate)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.Translate(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutorExpression[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass11_0`1.<ExecuteCore>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteCore[TResult](Expression query, Boolean async, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteAsync[TResult](Expression query, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.ExecuteAsync[TResult](Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at ArticleDashboard.Application.Features.Articles.Queries.GetAllArticlesHandler.Handle(GetAllArticlesQuery query) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.Application\Features\Articles\Queries\GetAllArticles\GetAllArticlesHandler.cs:line 31
   at ArticleDashboard.API.Controllers.ArticlesController.Get(Nullable`1 articleCategory, List`1 bicycleCategories, Nullable`1 material, String sortBy, Int32 page, Int32 pageSize) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API\Controllers\ArticlesController.cs:line 51
   at lambda_method10(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ArticleDashboard.API.Middleware.ExceptionMiddleware.Invoke(HttpContext context) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API\Middleware\ExceptionMiddleware.cs:line 21
2025-07-01 21:11:58.548 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - 500 null application/json 7894.067ms
2025-07-01 21:12:08.393 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:12:08.406 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:12:08.409 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:12:08.412 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:12:11.645 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 21:12:11.658 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[BicycleCategories], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[NetWeight]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 21:12:11.669 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 21:12:11.677 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 3241.3987ms
2025-07-01 21:12:11.684 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:12:11.688 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 3294.8361ms
2025-07-01 21:12:17.017 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:12:17.052 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:12:17.061 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:12:17.074 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:13:16.296 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 59186.8028ms
2025-07-01 21:13:16.305 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:13:45.334 +02:00 [ERR] Unhandled exception
System.InvalidOperationException: The LINQ expression 'b => __bikes_0
    .Contains(b)' could not be translated. Either rewrite the query in a form that can be translated, or switch to client evaluation explicitly by inserting a call to 'AsEnumerable', 'AsAsyncEnumerable', 'ToList', or 'ToListAsync'. See https://go.microsoft.com/fwlink/?linkid=2101038 for more information.
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.VisitLambda[T](Expression`1 lambdaExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.SqlServer.Query.Internal.SqlServerSqlTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.TranslateInternal(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalSqlTranslatingExpressionVisitor.Translate(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateExpression(Expression expression, Boolean applyDefaultTypeMapping)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateLambdaExpression(ShapedQueryExpression shapedQueryExpression, LambdaExpression lambdaExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateWhere(ShapedQueryExpression source, LambdaExpression predicate)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.Translate(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutorExpression[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass11_0`1.<ExecuteCore>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteCore[TResult](Expression query, Boolean async, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteAsync[TResult](Expression query, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.ExecuteAsync[TResult](Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at ArticleDashboard.Application.Features.Articles.Queries.GetAllArticlesHandler.Handle(GetAllArticlesQuery query) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.Application\Features\Articles\Queries\GetAllArticles\GetAllArticlesHandler.cs:line 31
   at ArticleDashboard.API.Controllers.ArticlesController.Get(Nullable`1 articleCategory, List`1 bicycleCategories, Nullable`1 material, String sortBy, Int32 page, Int32 pageSize) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API\Controllers\ArticlesController.cs:line 51
   at lambda_method10(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ArticleDashboard.API.Middleware.ExceptionMiddleware.Invoke(HttpContext context) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API\Middleware\ExceptionMiddleware.cs:line 21
2025-07-01 21:13:45.523 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - 500 null application/json 88505.6148ms
2025-07-01 21:13:53.877 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=W&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:13:53.887 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:13:53.889 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:13:53.893 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:13:53.916 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-01 21:13:53.942 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 36.1734ms
2025-07-01 21:13:53.950 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:13:53.952 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=W&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - 400 null application/problem+json; charset=utf-8 75.5819ms
2025-07-01 21:13:54.184 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=Wh&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:13:54.190 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:13:54.191 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:13:54.193 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:13:54.203 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-01 21:13:54.206 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 4.2064ms
2025-07-01 21:13:54.215 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:13:54.219 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=Wh&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - 400 null application/problem+json; charset=utf-8 35.0315ms
2025-07-01 21:13:54.470 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=Whe&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:13:54.479 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:13:54.482 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:13:54.485 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:13:54.496 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-01 21:13:54.500 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 5.5587ms
2025-07-01 21:13:54.507 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:13:54.511 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=Whe&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - 400 null application/problem+json; charset=utf-8 41.1965ms
2025-07-01 21:13:54.613 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=Whee&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:13:54.618 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:13:54.619 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:13:54.621 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:13:54.631 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-01 21:13:54.635 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 5.1627ms
2025-07-01 21:13:54.639 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:13:54.644 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=Whee&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - 400 null application/problem+json; charset=utf-8 30.4653ms
2025-07-01 21:13:55.450 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=Wheel&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:13:55.458 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:13:55.460 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:13:55.463 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Enums.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:13:55.479 +02:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-01 21:13:55.484 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 6.6521ms
2025-07-01 21:13:55.490 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:13:55.493 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=Wheel&bicycleCategories=Road&material=&sortBy=netWeight&page=1&pageSize=10 - 400 null application/problem+json; charset=utf-8 43.3247ms
2025-07-01 21:44:52.183 +02:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 21:44:52.246 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 21:44:52.262 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 21:47:05.918 +02:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 21:47:05.971 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 21:47:05.990 +02:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 21:47:06.063 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 21:47:06.075 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 21:47:06.076 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 21:47:06.080 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 21:47:06.092 +02:00 [INF] Applying migration '20250701194645_NormalizeBicycleCategories'.
2025-07-01 21:47:06.189 +02:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var sysname;
SELECT @var = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Articles]') AND [c].[name] = N'BicycleCategories');
IF @var IS NOT NULL EXEC(N'ALTER TABLE [Articles] DROP CONSTRAINT [' + @var + '];');
ALTER TABLE [Articles] DROP COLUMN [BicycleCategories];
2025-07-01 21:47:06.219 +02:00 [INF] Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @var1 sysname;
SELECT @var1 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Articles]') AND [c].[name] = N'NetWeight');
IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [Articles] DROP CONSTRAINT [' + @var1 + '];');
ALTER TABLE [Articles] ALTER COLUMN [NetWeight] float NOT NULL;
2025-07-01 21:47:06.223 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [BicycleCategories] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_BicycleCategories] PRIMARY KEY ([Id])
);
2025-07-01 21:47:06.226 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [ArticleBicycleCategory] (
    [ArticlesId] uniqueidentifier NOT NULL,
    [BicycleCategoriesId] int NOT NULL,
    CONSTRAINT [PK_ArticleBicycleCategory] PRIMARY KEY ([ArticlesId], [BicycleCategoriesId]),
    CONSTRAINT [FK_ArticleBicycleCategory_Articles_ArticlesId] FOREIGN KEY ([ArticlesId]) REFERENCES [Articles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_ArticleBicycleCategory_BicycleCategories_BicycleCategoriesId] FOREIGN KEY ([BicycleCategoriesId]) REFERENCES [BicycleCategories] ([Id]) ON DELETE CASCADE
);
2025-07-01 21:47:06.243 +02:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ArticleCategory', N'Material', N'Name', N'NetWeight') AND [object_id] = OBJECT_ID(N'[Articles]'))
    SET IDENTITY_INSERT [Articles] ON;
INSERT INTO [Articles] ([Id], [ArticleCategory], [Material], [Name], [NetWeight])
VALUES ('11111111-1111-1111-1111-111111111111', N'Pedal', N'Carbon', N'Carbon Pedal X1', 620.0E0),
('22222222-2222-2222-2222-222222222222', N'Crank', N'Aluminum', N'Crank Pro 3000', 540.0E0);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ArticleCategory', N'Material', N'Name', N'NetWeight') AND [object_id] = OBJECT_ID(N'[Articles]'))
    SET IDENTITY_INSERT [Articles] OFF;
2025-07-01 21:47:06.261 +02:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Name') AND [object_id] = OBJECT_ID(N'[BicycleCategories]'))
    SET IDENTITY_INSERT [BicycleCategories] ON;
INSERT INTO [BicycleCategories] ([Id], [Name])
VALUES (1, N'Road'),
(2, N'Mountain'),
(3, N'Hybrid'),
(4, N'Electric');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Name') AND [object_id] = OBJECT_ID(N'[BicycleCategories]'))
    SET IDENTITY_INSERT [BicycleCategories] OFF;
2025-07-01 21:47:06.279 +02:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ArticlesId', N'BicycleCategoriesId') AND [object_id] = OBJECT_ID(N'[ArticleBicycleCategory]'))
    SET IDENTITY_INSERT [ArticleBicycleCategory] ON;
INSERT INTO [ArticleBicycleCategory] ([ArticlesId], [BicycleCategoriesId])
VALUES ('11111111-1111-1111-1111-111111111111', 1),
('11111111-1111-1111-1111-111111111111', 2),
('22222222-2222-2222-2222-222222222222', 2),
('22222222-2222-2222-2222-222222222222', 3);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ArticlesId', N'BicycleCategoriesId') AND [object_id] = OBJECT_ID(N'[ArticleBicycleCategory]'))
    SET IDENTITY_INSERT [ArticleBicycleCategory] OFF;
2025-07-01 21:47:06.985 +02:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_ArticleBicycleCategory_BicycleCategoriesId] ON [ArticleBicycleCategory] ([BicycleCategoriesId]);
2025-07-01 21:47:06.987 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250701194645_NormalizeBicycleCategories', N'9.0.6');
2025-07-01 21:47:06.994 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 21:49:38.600 +02:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 21:49:38.710 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 21:49:38.743 +02:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 21:49:38.874 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 21:49:38.889 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 21:49:38.893 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 21:49:38.903 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 21:49:38.919 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 21:49:38.924 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 21:49:39.249 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 21:49:39.251 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 21:49:39.401 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 21:49:39.405 +02:00 [INF] Hosting environment: Development
2025-07-01 21:49:39.407 +02:00 [INF] Content root path: H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API
2025-07-01 21:49:40.192 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 21:49:40.236 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 59.767ms
2025-07-01 21:49:40.659 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 21:49:40.789 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 129.7531ms
2025-07-01 21:49:42.354 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 21:49:42.457 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 104.1008ms
2025-07-01 21:52:46.815 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:52:46.837 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:52:46.859 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:52:46.949 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Entities.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:52:53.279 +02:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 21:52:53.416 +02:00 [INF] Executed DbCommand (30ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[NetWeight]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 21:52:53.546 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 21:52:53.587 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 6623.6317ms
2025-07-01 21:52:53.593 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:52:53.605 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 6789.2666ms
2025-07-01 21:54:49.399 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - null null
2025-07-01 21:54:49.877 +02:00 [INF] CORS policy execution successful.
2025-07-01 21:54:49.896 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:54:49.906 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Entities.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:54:58.868 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 21:54:58.876 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ArticleCategory], [a].[Material], [a].[Name], [a].[NetWeight]
FROM [Articles] AS [a]
ORDER BY [a].[NetWeight]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2025-07-01 21:54:58.889 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 21:54:58.893 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 8944.4746ms
2025-07-01 21:54:58.899 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:54:58.902 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/articles?articleCategory=&material=&sortBy=netWeight&page=1&pageSize=10 - 200 null application/json; charset=utf-8 9503.9352ms
2025-07-01 21:56:36.875 +02:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 21:56:36.970 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-01 21:56:37.008 +02:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-07-01 21:56:37.149 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-07-01 21:56:37.169 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-07-01 21:56:37.173 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-07-01 21:56:37.183 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-07-01 21:56:37.197 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-07-01 21:56:37.200 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-07-01 21:56:37.515 +02:00 [INF] Now listening on: https://localhost:7023
2025-07-01 21:56:37.518 +02:00 [INF] Now listening on: http://localhost:5115
2025-07-01 21:56:37.634 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-01 21:56:37.636 +02:00 [INF] Hosting environment: Development
2025-07-01 21:56:37.639 +02:00 [INF] Content root path: H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API
2025-07-01 21:56:38.347 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - null null
2025-07-01 21:56:38.390 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_framework/aspnetcore-browser-refresh.js - 200 16525 application/javascript; charset=utf-8 55.9428ms
2025-07-01 21:56:38.717 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/_vs/browserLink - null null
2025-07-01 21:56:38.837 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/_vs/browserLink - 200 null text/javascript; charset=UTF-8 120.312ms
2025-07-01 21:56:40.125 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - null null
2025-07-01 21:56:40.229 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 104.2306ms
2025-07-01 21:56:45.575 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7023/api/Articles?bicycleCategories=%7B%22id%22%3A0%2C%22name%22%3A%22string%22%2C%22articles%22%3A%5B%7B%22id%22%3A%223fa85f64-5717-4562-b3fc-2c963f66afa6%22%2C%22name%22%3A%22string%22%2C%22articleCategory%22%3A0%2C%22material%22%3A0%2C%22netWeight%22%3A0%2C%22bicycleCategories%22%3A%5B%22string%22%5D%7D%5D%7D&page=1&pageSize=10 - null null
2025-07-01 21:56:45.609 +02:00 [INF] Executing endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:56:45.695 +02:00 [INF] Route matched with {action = "Get", controller = "Articles"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[ArticleDashboard.Application.DTOs.PagedResult`1[ArticleDashboard.Application.DTOs.ArticleDto]]] Get(System.Nullable`1[ArticleDashboard.Domain.Enums.ArticleCategory], System.Collections.Generic.List`1[ArticleDashboard.Domain.Entities.BicycleCategory], System.Nullable`1[ArticleDashboard.Domain.Enums.Material], System.String, Int32, Int32) on controller ArticleDashboard.API.Controllers.ArticlesController (ArticleDashboard.API).
2025-07-01 21:56:50.100 +02:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Articles] AS [a]
2025-07-01 21:56:50.148 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 21:56:50.151 +02:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-07-01 21:56:50.303 +02:00 [INF] Executed DbCommand (26ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [a1].[Id], [a1].[ArticleCategory], [a1].[Material], [a1].[Name], [a1].[NetWeight], [s].[ArticlesId], [s].[BicycleCategoriesId], [s].[Id], [s].[Name]
FROM (
    SELECT [a].[Id], [a].[ArticleCategory], [a].[Material], [a].[Name], [a].[NetWeight]
    FROM [Articles] AS [a]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [a1]
LEFT JOIN (
    SELECT [a0].[ArticlesId], [a0].[BicycleCategoriesId], [b].[Id], [b].[Name]
    FROM [ArticleBicycleCategory] AS [a0]
    INNER JOIN [BicycleCategories] AS [b] ON [a0].[BicycleCategoriesId] = [b].[Id]
) AS [s] ON [a1].[Id] = [s].[ArticlesId]
ORDER BY [a1].[Id], [s].[ArticlesId], [s].[BicycleCategoriesId]
2025-07-01 21:56:50.439 +02:00 [INF] Executing OkObjectResult, writing value of type 'ArticleDashboard.Application.DTOs.PagedResult`1[[ArticleDashboard.Application.DTOs.ArticleDto, ArticleDashboard.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-01 21:56:50.491 +02:00 [INF] Executed action ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API) in 4783.8659ms
2025-07-01 21:56:50.495 +02:00 [INF] Executed endpoint 'ArticleDashboard.API.Controllers.ArticlesController.Get (ArticleDashboard.API)'
2025-07-01 21:56:50.618 +02:00 [ERR] Unhandled exception
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Items.BicycleCategories.Articles.BicycleCategories.Articles.BicycleCategories.Articles.BicycleCategories.Articles.BicycleCategories.Articles.BicycleCategories.Articles.BicycleCategories.Articles.BicycleCategories.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(PipeWriter pipeWriter, T rootValue, Int32 flushThreshold, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(PipeWriter pipeWriter, T rootValue, Int32 flushThreshold, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(PipeWriter pipeWriter, T rootValue, Int32 flushThreshold, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ArticleDashboard.API.Middleware.ExceptionMiddleware.Invoke(HttpContext context) in H:\newdev\workspace\Noca\ArticleDashboard\backend\ArticleDashboard.API\Middleware\ExceptionMiddleware.cs:line 21
2025-07-01 21:56:51.063 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7023/api/Articles?bicycleCategories=%7B%22id%22%3A0%2C%22name%22%3A%22string%22%2C%22articles%22%3A%5B%7B%22id%22%3A%223fa85f64-5717-4562-b3fc-2c963f66afa6%22%2C%22name%22%3A%22string%22%2C%22articleCategory%22%3A0%2C%22material%22%3A0%2C%22netWeight%22%3A0%2C%22bicycleCategories%22%3A%5B%22string%22%5D%7D%5D%7D&page=1&pageSize=10 - 500 null application/json 5488.2761ms
