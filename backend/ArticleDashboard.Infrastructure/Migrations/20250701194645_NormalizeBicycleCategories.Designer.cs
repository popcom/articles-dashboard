// <auto-generated />
using System;
using ArticleDashboard.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArticleDashboard.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250701194645_NormalizeBicycleCategories")]
    partial class NormalizeBicycleCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArticleBicycleCategory", b =>
                {
                    b.Property<Guid>("ArticlesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BicycleCategoriesId")
                        .HasColumnType("int");

                    b.HasKey("ArticlesId", "BicycleCategoriesId");

                    b.HasIndex("BicycleCategoriesId");

                    b.ToTable("ArticleBicycleCategory", (string)null);

                    b.HasData(
                        new
                        {
                            ArticlesId = new Guid("11111111-1111-1111-1111-111111111111"),
                            BicycleCategoriesId = 1
                        },
                        new
                        {
                            ArticlesId = new Guid("11111111-1111-1111-1111-111111111111"),
                            BicycleCategoriesId = 2
                        },
                        new
                        {
                            ArticlesId = new Guid("22222222-2222-2222-2222-222222222222"),
                            BicycleCategoriesId = 2
                        },
                        new
                        {
                            ArticlesId = new Guid("22222222-2222-2222-2222-222222222222"),
                            BicycleCategoriesId = 3
                        });
                });

            modelBuilder.Entity("ArticleDashboard.Domain.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArticleCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NetWeight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            ArticleCategory = "Pedal",
                            Material = "Carbon",
                            Name = "Carbon Pedal X1",
                            NetWeight = 620.0
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            ArticleCategory = "Crank",
                            Material = "Aluminum",
                            Name = "Crank Pro 3000",
                            NetWeight = 540.0
                        });
                });

            modelBuilder.Entity("ArticleDashboard.Domain.Entities.BicycleCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BicycleCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Road"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mountain"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hybrid"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Electric"
                        });
                });

            modelBuilder.Entity("ArticleBicycleCategory", b =>
                {
                    b.HasOne("ArticleDashboard.Domain.Entities.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArticleDashboard.Domain.Entities.BicycleCategory", null)
                        .WithMany()
                        .HasForeignKey("BicycleCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
